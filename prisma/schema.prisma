// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  username String
  email    String
  bookmark Bookmark[]
  order    Order[]

  @@map("users")
}

model Food {
  id          Int             @id @default(autoincrement())
  name        String
  image       String?
  description String?         @db.Text
  rating      Int?
  category_id Int
  category    Category        @relation(fields: [category_id], references: [id])
  method      Method[]
  ingredients Ingredients[]
  bookmark    Bookmark[]
  order       Order[]

  @@map("foods")
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String
  image String?
  foods Food[]

  @@map("categories")
}

model Bookmark {
  id      Int  @id @default(autoincrement())
  user    User @relation(fields: [user_id], references: [id])
  user_id Int
  food    Food @relation(fields: [food_id], references: [id])
  food_id Int

  @@map("bookmarks")
}

model Method {
  id      Int    @id @default(autoincrement())
  step    Int
  how     String @db.Text
  food    Food   @relation(fields: [food_id], references: [id])
  food_id Int

  @@map("methods")
}

model Ingredients {
  id      Int    @id @default(autoincrement())
  name    String
  amount  Int
  price   Int
  food    Food   @relation(fields: [food_id], references: [id])
  food_id Int

  @@map("ingredients")
}

model Order {
  id       Int             @id @default(autoincrement())
  location String
  date     DateTime       @default(now())
  rating   Int
  user     User            @relation(fields: [user_id], references: [id])
  user_id  Int
  food     Food          @relation(fields: [food_id],references: [id])
  food_id  Int 

  @@map("orders")
}
